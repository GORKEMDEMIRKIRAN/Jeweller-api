[2025-09-12 00:44:02] [ERROR]: [User]-[Controller]-[Register]: Error occurred - Error: User already exists
[2025-09-12 00:44:35] [ERROR]: [Auth]-[Controller]-[Login]:: Error occurred - Error: Invalid password
[2025-09-12 00:44:51] [ERROR]: [Auth]-[Controller]-[Login]:: Error occurred - Error: Invalid password
[2025-09-12 00:44:57] [ERROR]: [Auth]-[Controller]-[Login]:: Error occurred - Error: Invalid password
[2025-09-12 00:46:40] [ERROR]: [Auth]-[Controller]-[Login]:: Error occurred - Error: Invalid password
[2025-09-12 12:44:07] [ERROR]: [Auth]-[Controller]-[Login]:: Error occurred - Error: user not found
[2025-09-12 12:50:42] [ERROR]: [User]-[Repository]-[deleteUserById]: Error deleting user by id (1) - PrismaClientKnownRequestError: 
Invalid `prisma.user.delete()` invocation:


Foreign key constraint violated on the constraint: `Customer_userId_fkey`
[2025-09-12 12:56:59] [ERROR]: [Customer]-[Repository]-[deleteAllCustomersByUserId]: Error deleting all customers by user id (1) - PrismaClientKnownRequestError: 
Invalid `prisma.customer.deleteMany()` invocation:


Foreign key constraint violated on the constraint: `Transaction_customerId_fkey`
[2025-09-12 12:57:00] [ERROR]: [User]-[Repository]-[deleteUserById]: Error deleting user by id (1) - PrismaClientKnownRequestError: 
Invalid `prisma.user.delete()` invocation:


Foreign key constraint violated on the constraint: `Customer_userId_fkey`
[2025-09-12 13:02:37] [ERROR]: [Auth]-[Controller]-[Login]:: Error occurred - Error: Invalid password
[2025-09-12 13:10:10] [ERROR]: [Auth]-[Controller]-[Login]:: Error occurred - Error: Invalid password
[2025-09-12 13:17:44] [ERROR]: [Auth]-[Controller]-[Login]:: Error occurred - Error: Invalid password
[2025-09-12 16:37:38] [ERROR]: [Auth]-[Controller]-[Login]:: Error occurred - Error: Invalid password
[2025-09-12 16:51:49] [ERROR]: [Auth]-[Controller]-[ResetPassword]: Error occurred - TypeError: Cannot destructure property 'newPassword' of 'req.body' as it is undefined.
[2025-09-12 22:41:11] [ERROR]: [Auth]-[Controller]-[Login]: Error occurred - Error: Permission to send an SMS has not been enabled for the region indicated by the 'To' number: +90543632XXXX
[2025-09-12 22:47:18] [ERROR]: [Auth]-[Controller]-[Login]: Error occurred - Error: 'From' +12065551234 is not a Twilio phone number or Short Code country mismatch
[2025-09-12 22:49:40] [ERROR]: [Auth]-[Controller]-[Login]: Error occurred - Error: 'From' +12065551234 is not a Twilio phone number or Short Code country mismatch
[2025-09-12 22:50:23] [ERROR]: [Auth]-[Controller]-[Login]: Error occurred - Error: 'From' +12065551234 is not a Twilio phone number or Short Code country mismatch
[2025-09-12 22:57:27] [ERROR]: [Auth]-[Controller]-[Login]: Error occurred - Error: 'From' +12065551234 is not a Twilio phone number or Short Code country mismatch
[2025-09-13 01:14:39] [ERROR]: [Product]-[ProductRepository]-[findProductById]: Error occurred - Error: Product not found
[2025-09-13 01:14:39] [ERROR]: [Product]-[Service]-[getProductById]:Error fetching product by id (6) - Error: Error retrieving product
[2025-09-13 01:14:39] [ERROR]: [Product]-[ProductController]-[getProductById]: Error occurred - Error: Error fetching product by id
[2025-09-13 03:17:36] [ERROR]: [Product]-[ProductRepository]-[createProduct]:Product create failed - PrismaClientKnownRequestError: 
Invalid `prisma.product.create()` invocation:


Foreign key constraint violated on the constraint: `Product_productTypeId_fkey`
[2025-09-13 03:17:36] [ERROR]: [Transaction]-[Service]-[createTransaction]: Error creating transaction - Error: Error creating product
[2025-09-13 03:21:05] [ERROR]: [Customer]-[Repository]-[findCustomerById]: Error finding customer by id (undefined) - PrismaClientValidationError: 
Invalid `prisma.customer.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: CustomerWhereInput | CustomerWhereInput[],
?   OR?: CustomerWhereInput[],
?   NOT?: CustomerWhereInput | CustomerWhereInput[],
?   nameSurname?: StringFilter | String,
?   phone?: StringNullableFilter | String | Null,
?   createdAt?: DateTimeFilter | DateTime,
?   address?: StringNullableFilter | String | Null,
?   customerTypeId?: IntFilter | Int,
?   userId?: IntFilter | Int,
?   customerType?: CustomerTypeScalarRelationFilter | CustomerTypeWhereInput,
?   user?: UserScalarRelationFilter | UserWhereInput,
?   transactions?: TransactionListRelationFilter
  }
}

Argument `where` of type CustomerWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
